[{"/Users/nickscheurich/Desktop/employee-directory2/src/index.js":"1","/Users/nickscheurich/Desktop/employee-directory2/src/App.js":"2","/Users/nickscheurich/Desktop/employee-directory2/src/components/Header.js":"3","/Users/nickscheurich/Desktop/employee-directory2/src/components/Search.js":"4","/Users/nickscheurich/Desktop/employee-directory2/src/components/Table.js":"5","/Users/nickscheurich/Desktop/employee-directory2/src/components/TableRow.js":"6"},{"size":245,"mtime":1615150716732,"results":"7","hashOfConfig":"8"},{"size":3369,"mtime":1615150820895,"results":"9","hashOfConfig":"8"},{"size":318,"mtime":1615144201288,"results":"10","hashOfConfig":"8"},{"size":712,"mtime":1615144684875,"results":"11","hashOfConfig":"8"},{"size":905,"mtime":1615145154772,"results":"12","hashOfConfig":"8"},{"size":422,"mtime":1615145415460,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tc7bai",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/nickscheurich/Desktop/employee-directory2/src/index.js",[],"/Users/nickscheurich/Desktop/employee-directory2/src/App.js",["28","29"],"//importing react and components\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Table from \"./components/Table\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { findAllByTestID } from \"@testing-library/react\";\n\nlet data;\n\n//extend to react component and declare api data sets\nclass App extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\temployeeList: {},\n\t\tfilteredList: null,\n\t\tascending: true,\n\t};\n\n\t//componentDidMount calls the api and employeelist and filtered list for data sets\n\tasync componentDidMount() {\n\t\tlet response = await axios({\n\t\t\t//get method for randomuser api\n\t\t\tmethod: \"get\",\n\t\t\turl: \"https://randomuser.me/api/?results=50\",\n\t\t\tresponseType: \"stream\",\n\t\t});\n\t\t//setloading state to false and then sets employee and filtered to data.results\n\t\tdata = response.data.results;\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\temployeeList: response.data.results,\n\t\t\tfilteredList: response.data.results,\n\t\t});\n\t}\n\t//search function\n\tsearch = (str) => {\n\t\tconst filteredList = this.state.employeeList.filter((employee) => {\n\t\t\tconst fullName = (\n\t\t\t\temployee.name.first +\n\t\t\t\t\" \" +\n\t\t\t\temployee.name.last\n\t\t\t).toLowerCase();\n\t\t\t//returns whole list when page is loaded\n\t\t\treturn fullName.startsWith(str);\n\t\t});\n\t\tthis.setState({ filteredList: filteredList });\n\t};\n\t//sort function for columns\n\tsort = (header) => {\n\t\tif (header === \"Name\") {\n\t\t\tif (this.state.ascending === true) {\n\t\t\t\tthis.sortAscending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: false });\n\t\t\t}\n\t\t\tif (this.state.ascending === false) {\n\t\t\t\tthis.sortDecending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: true });\n\t\t\t}\n\t\t} else if (header === \"Email\") {\n\t\t\tif (this.state.ascending === true) {\n\t\t\t\tthis.sortAscending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: false });\n\t\t\t}\n\t\t\tif (this.state.ascending === false) {\n\t\t\t\tthis.sortDecending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: true });\n\t\t\t}\n\t\t}\n\t};\n\t//function for ascending sorting\n\tsortAscending = (arr) => {\n\t\tarr.sort(function (a, b) {\n\t\t\tvar nameA = (a.name.first + a.name.last).toUpperCase();\n\t\t\tvar nameB = (b.name.first + b.name.last).toUpperCase();\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tthis.setState({ filteredList: arr });\n\t};\n\t//function for decending sorting\n\tsortDecending = (arr) => {\n\t\tarr.sort(function (a, b) {\n\t\t\tvar nameA = (a.name.first + a.name.last).toUpperCase();\n\t\t\tvar nameB = (b.name.first + b.name.last).toUpperCase();\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tthis.setState({ filteredList: arr });\n\t};\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinner\">\n\t\t\t\t\t<div className=\"spinner-border\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t//this is used to make searched and filter data\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Search searchFunction={this.search} />\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\tClick on the name or email to sort the table by name or email.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Table employees={this.state.filteredList} sort={this.sort} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","/Users/nickscheurich/Desktop/employee-directory2/src/components/Header.js",[],"/Users/nickscheurich/Desktop/employee-directory2/src/components/Search.js",[],"/Users/nickscheurich/Desktop/employee-directory2/src/components/Table.js",[],"/Users/nickscheurich/Desktop/employee-directory2/src/components/TableRow.js",["30"],"import React from \"react\";\n\nfunction TableRow(props) {\n\treturn (\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<img\n\t\t\t\t\tsrc={props.picture.thumbnail}\n\t\t\t\t\talt=\"image of employee\"\n\t\t\t\t\tclassName=\"img-thumbnail\"\n\t\t\t\t></img>\n\t\t\t</td>\n\t\t\t<td>{props.name.first + \" \" + props.name.last}</td>\n\t\t\t<td>{props.email}</td>\n\t\t\t<td>{props.registered.age}</td>\n\t\t\t<td>{props.phone}</td>\n\t\t\t<td>{props.location.state}</td>\n\t\t</tr>\n\t);\n}\n\nexport default TableRow;\n",{"ruleId":"31","severity":1,"message":"32","line":8,"column":10,"nodeType":"33","messageId":"34","endLine":8,"endColumn":25},{"ruleId":"31","severity":1,"message":"35","line":30,"column":3,"nodeType":"33","messageId":"34","endLine":30,"endColumn":7},{"ruleId":"36","severity":1,"message":"37","line":7,"column":5,"nodeType":"38","endLine":11,"endColumn":6},"no-unused-vars","'findAllByTestID' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]