{"ast":null,"code":"var _jsxFileName = \"/Users/nickscheurich/Desktop/employee-directory2/src/App.js\";\n//importing react and components\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Table from \"./components/Table\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { findAllByTestID } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data; //extend to react component and declare api data sets\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      employeeList: {},\n      filteredList: null,\n      ascending: true\n    };\n\n    this.search = str => {\n      const filteredList = this.state.employeeList.filter(employee => {\n        const fullName = (employee.name.first + \" \" + employee.name.last).toLowerCase(); //returns whole list when page is loaded\n\n        return fullName.startsWith(str);\n      });\n      this.setState({\n        filteredList: filteredList\n      });\n    };\n\n    this.sort = header => {\n      if (header === \"Name\") {\n        if (this.state.ascending === true) {\n          this.sortAscending(this.state.filteredList);\n          this.setState({\n            ascending: false\n          });\n        }\n\n        if (this.state.ascending === false) {\n          this.sortDecending(this.state.filteredList);\n          this.setState({\n            ascending: true\n          });\n        }\n      } else if (header === \"Email\") {\n        if (this.state.ascending === true) {\n          this.sortAscending(this.state.filteredList);\n          this.setState({\n            ascending: false\n          });\n        }\n\n        if (this.state.ascending === false) {\n          this.sortDecending(this.state.filteredList);\n          this.setState({\n            ascending: true\n          });\n        }\n      }\n    };\n\n    this.sortAscending = arr => {\n      arr.sort(function (a, b) {\n        var nameA = (a.name.first + a.name.last).toUpperCase();\n        var nameB = (b.name.first + b.name.last).toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n\n        if (nameA < nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        filteredList: arr\n      });\n    };\n\n    this.sortDecending = arr => {\n      arr.sort(function (a, b) {\n        var nameA = (a.name.first + a.name.last).toUpperCase();\n        var nameB = (b.name.first + b.name.last).toUpperCase();\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        filteredList: arr\n      });\n    };\n  }\n\n  //componentDidMount calls the api and employeelist and filtered list for data sets\n  async componentDidMount() {\n    let response = await axios({\n      //get method for randomuser api\n      method: \"get\",\n      url: \"https://randomuser.me/api/?results=50\",\n      responseType: \"stream\"\n    }); //setloading state to false and then sets employee and filtered to data.results\n\n    data = response.data.results;\n    this.setState({\n      loading: false,\n      employeeList: response.data.results,\n      filteredList: response.data.results\n    });\n  } //search function\n\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this);\n    } //this is used to make searched and filter data\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchFunction: this.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body text-center\",\n          children: \"Click on the name or email to sort the table by name or email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        employees: this.state.filteredList,\n        sort: this.sort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nickscheurich/Desktop/employee-directory2/src/App.js"],"names":["React","Header","Search","Table","axios","findAllByTestID","data","App","Component","state","loading","employeeList","filteredList","ascending","search","str","filter","employee","fullName","name","first","last","toLowerCase","startsWith","setState","sort","header","sortAscending","sortDecending","arr","a","b","nameA","toUpperCase","nameB","componentDidMount","response","method","url","responseType","results","render"],"mappings":"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","sourcesContent":["//importing react and components\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Table from \"./components/Table\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { findAllByTestID } from \"@testing-library/react\";\n\nlet data;\n\n//extend to react component and declare api data sets\nclass App extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\temployeeList: {},\n\t\tfilteredList: null,\n\t\tascending: true,\n\t};\n\n\t//componentDidMount calls the api and employeelist and filtered list for data sets\n\tasync componentDidMount() {\n\t\tlet response = await axios({\n\t\t\t//get method for randomuser api\n\t\t\tmethod: \"get\",\n\t\t\turl: \"https://randomuser.me/api/?results=50\",\n\t\t\tresponseType: \"stream\",\n\t\t});\n\t\t//setloading state to false and then sets employee and filtered to data.results\n\t\tdata = response.data.results;\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\temployeeList: response.data.results,\n\t\t\tfilteredList: response.data.results,\n\t\t});\n\t}\n\t//search function\n\tsearch = (str) => {\n\t\tconst filteredList = this.state.employeeList.filter((employee) => {\n\t\t\tconst fullName = (\n\t\t\t\temployee.name.first +\n\t\t\t\t\" \" +\n\t\t\t\temployee.name.last\n\t\t\t).toLowerCase();\n\t\t\t//returns whole list when page is loaded\n\t\t\treturn fullName.startsWith(str);\n\t\t});\n\t\tthis.setState({ filteredList: filteredList });\n\t};\n\t//sort function for columns\n\tsort = (header) => {\n\t\tif (header === \"Name\") {\n\t\t\tif (this.state.ascending === true) {\n\t\t\t\tthis.sortAscending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: false });\n\t\t\t}\n\t\t\tif (this.state.ascending === false) {\n\t\t\t\tthis.sortDecending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: true });\n\t\t\t}\n\t\t} else if (header === \"Email\") {\n\t\t\tif (this.state.ascending === true) {\n\t\t\t\tthis.sortAscending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: false });\n\t\t\t}\n\t\t\tif (this.state.ascending === false) {\n\t\t\t\tthis.sortDecending(this.state.filteredList);\n\t\t\t\tthis.setState({ ascending: true });\n\t\t\t}\n\t\t}\n\t};\n\t//function for ascending sorting\n\tsortAscending = (arr) => {\n\t\tarr.sort(function (a, b) {\n\t\t\tvar nameA = (a.name.first + a.name.last).toUpperCase();\n\t\t\tvar nameB = (b.name.first + b.name.last).toUpperCase();\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tthis.setState({ filteredList: arr });\n\t};\n\t//function for decending sorting\n\tsortDecending = (arr) => {\n\t\tarr.sort(function (a, b) {\n\t\t\tvar nameA = (a.name.first + a.name.last).toUpperCase();\n\t\t\tvar nameB = (b.name.first + b.name.last).toUpperCase();\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tthis.setState({ filteredList: arr });\n\t};\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinner\">\n\t\t\t\t\t<div className=\"spinner-border\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t//this is used to make searched and filter data\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Search searchFunction={this.search} />\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\tClick on the name or email to sort the table by name or email.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Table employees={this.state.filteredList} sort={this.sort} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}